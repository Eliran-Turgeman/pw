name: Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-gnu
    steps:
      - uses: actions/checkout@v2
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: ${{ matrix.target }}
          components: rustfmt, clippy
      - name: Build Release
        run: cargo build --release --target ${{ matrix.target }}
      - name: Rename binary for Windows
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: mv target/${{ matrix.target }}/release/pw target/${{ matrix.target }}/release/pw.exe
      - name: Create Unique Tag
        id: unique_tag
        run: echo "::set-output name=tag::$(date +'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA)"
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.unique_tag.outputs.tag }}
          release_name: Release ${{ github.sha }}
          draft: false
          prerelease: false
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./target/${{ matrix.target }}/release/pw${{ if eq(matrix.target, 'x86_64-pc-windows-gnu') }}.exe${{ endif }}
          asset_name: pw-${{ matrix.target }}${{ if eq(matrix.target, 'x86_64-pc-windows-gnu') }}.exe${{ endif }}
          asset_content_type: application/octet-stream
